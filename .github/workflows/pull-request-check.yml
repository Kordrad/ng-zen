name: Check pull request

on:
  pull_request:
    branches: [master, develop]

env:
  NODE_VERSION: 18
  RETENTION_DAYS: 30

jobs:
  determine-changed-projects:
    runs-on: ubuntu-latest
    outputs:
      changed_projects: ${{ steps.set-output.outputs.changed_projects }}
    steps:
      - uses: actions/checkout@v4
      - name: Determine changed projects
        id: set-output
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          echo "Changed files: $CHANGED_FILES"

          CHANGED_PROJECTS=""

          if echo "$CHANGED_FILES" | grep -q '^projects/cli/'; then
            CHANGED_PROJECTS="$CHANGED_PROJECTS cli"
          fi
          if echo "$CHANGED_FILES" | grep -q '^projects/kit/'; then
            CHANGED_PROJECTS="$CHANGED_PROJECTS kit"
          fi

          echo "Changed projects: $CHANGED_PROJECTS"
          echo "::set-output name=changed_projects::$CHANGED_PROJECTS"

  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.NODE_VERSION }}-
      - run: npm ci
        if: steps.cache-node-modules.outputs.cache-hit != 'true'

  lint:
    runs-on: ubuntu-latest
    needs: [determine-changed-projects, setup]
    strategy:
      matrix:
        project: [cli, kit]
    if: contains(needs.determine-changed-projects.outputs.changed_projects, matrix.project)
    steps:
      - uses: actions/checkout@v4
      - name: Restore node modules from cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('package-lock.json') }}
      - run: npm ci
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
      - name: Run lint
        run: npm run lint -- ${{ matrix.project }}
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lint-report-${{ matrix.project }}
          path: lint-report/
          retention-days: ${{ env.RETENTION_DAYS }}

  test:
    runs-on: ubuntu-latest
    needs: [determine-changed-projects, setup]
    strategy:
      matrix:
        project: [cli, kit]
    if: contains(needs.determine-changed-projects.outputs.changed_projects, matrix.project)
    steps:
      - uses: actions/checkout@v4
      - name: Restore node modules from cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('package-lock.json') }}
      - run: npm ci
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
      - name: Run tests
        run: npm run test -- ${{ matrix.project }}
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-report-${{ matrix.project }}
          path: test-report/
          retention-days: ${{ env.RETENTION_DAYS }}

  performance:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Restore node modules from cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('package-lock.json') }}
      - run: npm ci
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
      - run: npm run performance
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-report
          path: performance-report/
          retention-days: ${{ env.RETENTION_DAYS }}

  build:
    runs-on: ubuntu-latest
    needs: [lint, test, performance]
    strategy:
      matrix:
        project: [cli, kit]
    if: contains(needs.determine-changed-projects.outputs.changed_projects, matrix.project)
    steps:
      - uses: actions/checkout@v4
      - name: Restore node modules from cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('package-lock.json') }}
      - run: npm ci
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
      - name: Run build
        run: npm run build -- ${{ matrix.project }}
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-report-${{ matrix.project }}
          path: build-report/
          retention-days: ${{ env.RETENTION_DAYS }}
